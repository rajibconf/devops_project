---
- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  become: yes

- name: Install common packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - software-properties-common
      - wget
      - vim
      - htop
      - net-tools
    state: present
  become: yes

- name: Set timezone
  timezone:
    name: "{{ timezone }}"
  become: yes

- name: Disable swap (ignore if no swap found)
  shell: swapoff -a || true
  become: yes
  when: swap_enabled == false

- name: Check if /etc/fstab exists
  stat:
    path: /etc/fstab
  register: fstab_exists
  become: yes

- name: Disable swap in /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*\s+swap\s+.*)$'
    replace: '#\1'
  become: yes
  when: swap_enabled == false and fstab_exists.stat.exists

- name: Load kernel modules (ignore errors in containers)
  shell: modprobe {{ item }} || true
  loop:
    - overlay
    - br_netfilter
  become: yes
  changed_when: false

- name: Configure kernel modules to load on boot
  blockinfile:
    path: /etc/modules-load.d/k8s.conf
    create: yes
    block: |
      overlay
      br_netfilter
  become: yes

- name: Configure sysctl
  blockinfile:
    path: /etc/sysctl.d/k8s.conf
    create: yes
    block: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
  become: yes
  notify: reload sysctl

- name: Add Docker's official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /etc/apt/keyrings/docker.gpg
    state: present
  become: yes

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
  become: yes

- name: Update apt cache after adding Docker repository
  apt:
    update_cache: yes
  become: yes

- name: Install containerd
  apt:
    name: containerd.io
    state: present
  become: yes

- name: Create containerd config directory
  file:
    path: /etc/containerd
    state: directory
    mode: '0755'
  become: yes

- name: Generate containerd config
  shell: containerd config default
  register: containerd_config
  become: yes

- name: Write containerd config with SystemdCgroup enabled
  copy:
    content: "{{ containerd_config.stdout | regex_replace('SystemdCgroup = false', 'SystemdCgroup = true') }}"
    dest: /etc/containerd/config.toml
    backup: yes
  become: yes
  notify: restart containerd